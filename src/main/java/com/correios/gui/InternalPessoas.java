package com.correios.gui;

import com.correios.DAO.PessoaDAO;
import com.correios.entities.Endereco;
import com.correios.entities.Pessoa;
import java.util.ArrayList;
import java.util.ResourceBundle;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Tela Interna para agregar todas as operacoes principais de cadastro de
 * pessoas. Outras telas podem serem geradas a partir desta
 *
 * @version 1.0
 * @author fabiosperotto
 */
public class InternalPessoas extends javax.swing.JInternalFrame {

    private final ResourceBundle traducoes;

    /**
     * Construtor padrao de criacao da InternalPessoas
     *
     * @param traducoes ResourceBundle arquivo de traducoes carregado na main
     * para usar na aplicacao
     */
    public InternalPessoas(ResourceBundle traducoes) {
        initComponents();
        this.getRootPane().setDefaultButton(btnSalvar); //seta um botao como o principal do frame, dispara se pressionado Enter
        this.traducoes = traducoes;
    }

    /**
     * Metodo para ser utilizado pela thread da tela principal a fim de
     * carregamento de dados pesados
     */
    public void carregarDados() {
        this.carregarTabela();
        this.traduzirGUI();
    }

    /**
     * Ao abrir o JFrame ou JInteralFrame que possua um JTable e necessario
     * realizar a construcao de dados internos do JTable. Este metodo dependera
     * do componente que realizao a interacao com banco de dados
     */
    public void carregarTabela() {
        ArrayList<Pessoa> pessoas = (ArrayList<Pessoa>) PessoaDAO.listarTodos();
        DefaultTableModel modelo = (DefaultTableModel) this.tbPessoas.getModel();
        for (Pessoa pessoa : pessoas) {
            String[] linha = {
                String.valueOf(pessoa.getId()),
                pessoa.getNome()
            };
            modelo.addRow(linha);
        }
        this.tbPessoas.changeSelection(0, 0, false, false);
    }

    public void traduzirGUI() {
        this.setTitle(this.traducoes.getString("cad_pessoas_frame_titulo"));
        this.jbTituloPrincipal.setText(this.traducoes.getString("cad_pessoas_titulo"));
        this.jbNome.setText(this.traducoes.getString("cad_pessoas_rotulo_nome"));
        this.jbRua.setText(this.traducoes.getString("cad_pessoas_rotulo_rua"));
        this.jbNumero.setText(this.traducoes.getString("cad_pessoas_rotulo_numero"));
        this.jlObrigatorios.setText(this.traducoes.getString("cad_pessoas_rotulo_obrigatorios"));
        this.btnSalvar.setText(this.traducoes.getString("cad_pessoas_botao_salvar"));
        this.jbTituloTabela.setText(this.traducoes.getString("cad_pessoas_titulo_tabela"));

        this.btnEtiquetas.setText(this.traducoes.getString("cad_pessoas_botao_etiqueta"));
        this.btnEditar.setText(this.traducoes.getString("cad_pessoas_botao_editar"));
        this.btnExcluir.setText(this.traducoes.getString("cad_pessoas_botao_remover"));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbPessoas = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jbTituloPrincipal = new javax.swing.JLabel();
        jbTituloTabela = new javax.swing.JLabel();
        jbNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jbRua = new javax.swing.JLabel();
        txtEndereco = new javax.swing.JTextField();
        btnSalvar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        spNumero = new javax.swing.JSpinner();
        jbNumero = new javax.swing.JLabel();
        btnExcluir = new javax.swing.JButton();
        jlObrigatorios = new javax.swing.JLabel();
        btnEtiquetas = new javax.swing.JButton();

        setClosable(true);
        setTitle("Relação de Pessoas");

        tbPessoas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Nome"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbPessoas);

        jbTituloPrincipal.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbTituloPrincipal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jbTituloPrincipal.setText("Inserir novo cadastro");

        jbTituloTabela.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbTituloTabela.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jbTituloTabela.setText("Pessoas cadastradas");

        jbNome.setText("Nome*:");

        txtNome.setToolTipText("Informe nome completo da pessoa");

        jbRua.setText("Rua:");

        txtEndereco.setToolTipText("Infome a localização da pessoa (rua, avenida, etc), sem o número");

        btnSalvar.setMnemonic('S');
        btnSalvar.setText("Salvar");
        btnSalvar.setPreferredSize(new java.awt.Dimension(109, 23));
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnEditar.setMnemonic('E');
        btnEditar.setText("Editar");
        btnEditar.setMaximumSize(new java.awt.Dimension(109, 23));
        btnEditar.setMinimumSize(new java.awt.Dimension(109, 23));
        btnEditar.setPreferredSize(new java.awt.Dimension(109, 23));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        spNumero.setToolTipText("Número da rua, informe 0 para SN");

        jbNumero.setText("Número:");

        btnExcluir.setMnemonic('R');
        btnExcluir.setText("Remover");
        btnExcluir.setMaximumSize(new java.awt.Dimension(109, 23));
        btnExcluir.setMinimumSize(new java.awt.Dimension(109, 23));
        btnExcluir.setPreferredSize(new java.awt.Dimension(109, 23));
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        jlObrigatorios.setForeground(new java.awt.Color(255, 0, 0));
        jlObrigatorios.setText("* campos obrigatórios");

        btnEtiquetas.setMnemonic('G');
        btnEtiquetas.setText("Gerar Etiquetas");
        btnEtiquetas.setToolTipText("Acessa a lista de endereços da pessoa para gerar etiquetas");
        btnEtiquetas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEtiquetasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbTituloPrincipal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jlObrigatorios)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jbNome)
                                    .addComponent(jbRua))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtEndereco)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jbNumero)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(spNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtNome)))
                            .addComponent(jbTituloTabela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnEtiquetas)
                                .addGap(35, 35, 35)
                                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbTituloPrincipal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNome)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbRua)
                    .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbNumero))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlObrigatorios))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbTituloTabela)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEtiquetas)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Salva dados pessoais do formulario para cadastro de Pessoas. Podera
     * salvar tambem um endereco para pessoa se existente, incrementando o
     * JTable com os dados caso estes forem persistidos no banco de dados
     *
     * @param evt evento de clique principal do mouse
     */
    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        String nome = this.txtNome.getText();
        if (nome.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    this.traducoes.getString("cad_pessoas_msg1_desc"),
                    this.traducoes.getString("cad_pessoas_msg1_titulo"),
                    JOptionPane.ERROR_MESSAGE);
        }
        if (!nome.isEmpty()) {
            Pessoa novaPessoa = new Pessoa(nome);
            String endereco = this.txtEndereco.getText();
            int numero = (int) this.spNumero.getValue();
            if (!endereco.isEmpty()) {
                novaPessoa.addEndereco(new Endereco(endereco, numero));
            }
            if (PessoaDAO.salvar(novaPessoa)) {
                DefaultTableModel modelo = (DefaultTableModel) this.tbPessoas.getModel();
                String[] linha = {
                    String.valueOf(novaPessoa.getId()),
                    novaPessoa.getNome(),};
                modelo.addRow(linha);
                JOptionPane.showInternalMessageDialog(this,
                        this.traducoes.getString("cad_pessoas_msg2_desc"),
                        this.traducoes.getString("cad_pessoas_msg2_titulo"),
                        JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    /**
     * Realiza a remocao de um cadastro de de Pessoa se a mesma exista no banco
     * de dados
     *
     * @param evt evento de clique principal do mouse
     */
    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int resposta = JOptionPane.showInternalConfirmDialog(this,
                this.traducoes.getString("cad_pessoas_msg3_desc"),
                this.traducoes.getString("cad_pessoas_msg3_titulo"),
                JOptionPane.YES_NO_OPTION);

        if (resposta == 0) {
            int numeroLinha = this.tbPessoas.getSelectedRow();
            int id = Integer.parseInt(this.tbPessoas.getValueAt(numeroLinha, 0).toString());
            Pessoa pessoa = PessoaDAO.buscarPorId(id);
            if (pessoa == null) {
                JOptionPane.showInternalMessageDialog(this,
                        this.traducoes.getString("cad_pessoas_msg4_desc"),
                        this.traducoes.getString("cad_pessoas_msg4_titulo"),
                        JOptionPane.WARNING_MESSAGE);
            }
            if (pessoa != null) {
                if (PessoaDAO.excluir(pessoa)) {
                    DefaultTableModel modelo = (DefaultTableModel) this.tbPessoas.getModel();
                    modelo.removeRow(this.tbPessoas.getSelectedRow());
                    JOptionPane.showInternalMessageDialog(this,
                            this.traducoes.getString("cad_pessoas_msg5_desc"),
                            this.traducoes.getString("cad_pessoas_msg5_titulo"),
                            JOptionPane.INFORMATION_MESSAGE);
                    this.tbPessoas.changeSelection(0, 0, false, false);
                } else {
                    JOptionPane.showInternalMessageDialog(this,
                            this.traducoes.getString("cad_pessoas_msg6_desc"),
                            this.traducoes.getString("cad_pessoas_msg6_titulo"),
                            JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    /**
     * Abre a tela de edicao de dados pessoais e de endereco de uma Pessoa
     * selecionada em tela
     *
     * @param evt evento de clique principal do mouse
     */
    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        int numeroLinha = this.tbPessoas.getSelectedRow();
        int id = Integer.parseInt(this.tbPessoas.getValueAt(numeroLinha, 0).toString());
        Pessoa pessoa = PessoaDAO.buscarPorId(id);
        if (pessoa == null) {
            JOptionPane.showInternalMessageDialog(this,
                    this.traducoes.getString("cad_pessoas_msg4_desc"),
                    this.traducoes.getString("cad_pessoas_msg4_titulo"),
                    JOptionPane.WARNING_MESSAGE);
        }
        if (pessoa != null) {
            InternalPessoaEndereco telaDetalhes = new InternalPessoaEndereco(this.traducoes, this.tbPessoas, numeroLinha, pessoa);
            this.getDesktopPane().add(telaDetalhes);
            telaDetalhes.setVisible(true);
        }


    }//GEN-LAST:event_btnEditarActionPerformed

    /**
     * Solicita a abertura da tela de geracao de etiquetas para os enderecos da
     * Pessoa selecionada
     *
     * @param evt evento de clique principal do mouse
     */
    private void btnEtiquetasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEtiquetasActionPerformed
        int numeroLinha = this.tbPessoas.getSelectedRow();
        int id = Integer.parseInt(this.tbPessoas.getValueAt(numeroLinha, 0).toString());
        Pessoa pessoa = PessoaDAO.buscarPorId(id);
        if (pessoa == null) {
            JOptionPane.showInternalMessageDialog(
                    this,
                    this.traducoes.getString("cad_pessoas_msg4_desc"),
                    this.traducoes.getString("cad_pessoas_msg4_titulo"),
                    JOptionPane.WARNING_MESSAGE);
        }
        if (pessoa != null) {
            InternalEtiqueta telaEtiqueta = new InternalEtiqueta(this.traducoes, pessoa);
            this.getDesktopPane().add(telaEtiqueta);
            telaEtiqueta.setVisible(true);
        }
    }//GEN-LAST:event_btnEtiquetasActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEtiquetas;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel jbNome;
    private javax.swing.JLabel jbNumero;
    private javax.swing.JLabel jbRua;
    private javax.swing.JLabel jbTituloPrincipal;
    private javax.swing.JLabel jbTituloTabela;
    private javax.swing.JLabel jlObrigatorios;
    private javax.swing.JSpinner spNumero;
    private javax.swing.JTable tbPessoas;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
}
