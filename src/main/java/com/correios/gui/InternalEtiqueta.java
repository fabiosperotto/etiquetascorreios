/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.correios.gui;

import com.correios.DAO.EnderecoDAO;
import com.correios.DAO.PessoaDAO;
import com.correios.entities.Endereco;
import com.correios.entities.Pessoa;
import com.correios.services.Etiqueta;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Tela de geracoa de etiquetas para enderecos de uma pessoa
 *
 * @author fabiosperotto
 */
public class InternalEtiqueta extends javax.swing.JInternalFrame {

    private Pessoa pessoa;
    private final ResourceBundle traducoes;

    /**
     * Construtor da tela de etiquetas, possui uma ordem de chamada de funcoes
     * importantes para o funcionamento da tela
     *
     * @param traducoes ResourceBundle arquivo de traducoes carregado na main
     * para usar na aplicacao
     * @param pessoa Pessoa instancia de referencia do cadastro
     */
    public InternalEtiqueta(ResourceBundle traducoes, Pessoa pessoa) {
        this.pessoa = pessoa;
        this.traducoes = traducoes;
        initComponents();
        this.carregarTabela();
        this.carregarTextos();
    }

    /**
     * Carrega dados para o JTable padrao da tela interna de Etiquetas,
     * populando com os enderecos do usuario previamente selecionado
     */
    private void carregarTabela() {
        Pessoa pessoaEnderecos = PessoaDAO.buscarPessoaComEnderecos(this.pessoa.getId());
        if (pessoaEnderecos != null) {
            List<Endereco> enderecos = pessoaEnderecos.getEnderecos();
            DefaultTableModel modelo = (DefaultTableModel) this.tbEnderecos.getModel();
            for (Endereco endereco : enderecos) {
                String[] linha = {
                    String.valueOf(endereco.getId()),
                    endereco.getLogradouro(),
                    endereco.getNumero().toString()
                };
                modelo.addRow(linha);
            }
        }
        this.tbEnderecos.changeSelection(0, 0, false, false);
    }

    /**
     * Realiza a traducao de textos desta tela (jlabels e demais informacoes
     * visuais)
     */
    private void carregarTextos() {
        this.setTitle(this.traducoes.getString("cad_etiqueta_frame_titulo"));
        this.jbDescricao.setText(this.traducoes.getString("cad_etiqueta_titulo_principal") + this.pessoa.getNome());
        this.jbListagem.setText(this.traducoes.getString("cad_etiqueta_titulo_tabela"));
        this.btnGerar.setText(this.traducoes.getString("cad_etiqueta_botao_etiqueta"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbDescricao = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbEnderecos = new javax.swing.JTable();
        jbListagem = new javax.swing.JLabel();
        btnGerar = new javax.swing.JButton();

        setClosable(true);
        setTitle("Gerador de Etiquetas");
        setMinimumSize(new java.awt.Dimension(436, 352));
        setPreferredSize(new java.awt.Dimension(436, 352));

        jbDescricao.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbDescricao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jbDescricao.setText("Endereços disponíveis para X");

        tbEnderecos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Logradouro*", "Número*"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbEnderecos);

        jbListagem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jbListagem.setText("Selecione um e clique em Gerar Etiqueta");

        btnGerar.setMnemonic('G');
        btnGerar.setText("Gerar Etiqueta");
        btnGerar.setToolTipText("Gerar etiqueta");
        btnGerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbDescricao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbListagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGerar)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 8, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbDescricao)
                .addGap(14, 14, 14)
                .addComponent(jbListagem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGerar)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Solicita a geracao de etiqueta de endereco abrindo o PDF caso nenhum
     * problema for gerado
     *
     * @param evt evento de clique principal do mouse
     */
    private void btnGerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarActionPerformed
        int numeroLinha = this.tbEnderecos.getSelectedRow();
        int id = Integer.parseInt(this.tbEnderecos.getValueAt(numeroLinha, 0).toString());
        Endereco endereco = EnderecoDAO.buscarPorId(id);
        Etiqueta etiqueta = new Etiqueta(pessoa, endereco);
        if (etiqueta.gerarPDFEndereco()) {
            try {
                File arquivo = new File("./etiqueta.pdf");
                Desktop.getDesktop().open(arquivo);
            } catch (IOException ex) {
                Logger.getLogger(InternalEtiqueta.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (!etiqueta.gerarPDFEndereco()) {
            JOptionPane.showInternalMessageDialog(this,
                    this.traducoes.getString("cad_etiqueta_msg1_titulo"),
                    this.traducoes.getString("cad_etiqueta_msg1_desc"),
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGerarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGerar;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jbDescricao;
    private javax.swing.JLabel jbListagem;
    private javax.swing.JTable tbEnderecos;
    // End of variables declaration//GEN-END:variables
}
